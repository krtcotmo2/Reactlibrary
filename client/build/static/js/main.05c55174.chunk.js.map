{"version":3,"sources":["components/Navigation/Navigation.js","components/SearchPanel/SearchPanel.js","components/utils/API.js","components/Book/Book.js","components/Pages/Search/Search.js","components/Pages/Saved/Saved.js","components/Pages/NotFound/NotFound.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","id","window","location","pathname","href","SearchPanel","props","type","aria-describedby","placeholder","value","searhTerm","name","onChange","typeWord","onClick","searchClick","API","getBooks","axios","get","searchBooks","arg","concat","removeBook","delete","addBook","item","post","evalVis","noSave","Book","book","link","target","title","isbn","clickedFav","isLiked","author","image","src","synopsis","pageCount","Search","state","foundBooks","savedBooks","searchTerm","error","doSearch","event","preventDefault","_this","then","response","data","items","values","savedBookRes","setState","catch","err","this","handleInputChange","_event$target","Object","defineProperty","toggleFavorites","liked","results","newSaved","filter","x","aBook","find","undefined","volumeInfo","industryIdentifiers","identifier","bookObj","authors","description","imageLinks","smallThumbnail","infoLink","joined","_this2","Fragment","class","role","hidden","searchTerms","map","ind","adjustedVal","components_Book_Book","key","length","React","PureComponent","Saved","loadBooks","bookReults","removeFavorite","console","log","NotFount","App","react_router_dom","react_router","exact","path","component","NotFound","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.05c55174.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Navigation() {\r\n     return(\r\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">                \r\n          <div className=\" navbar\" id=\"navbarNav\">\r\n               <ul className=\"navbar-nav\">\r\n               <li className=\"nav-item pr-5\">\r\n               <h3>\r\n                    React Library\r\n               </h3>\r\n               </li>\r\n               <li className={window.location.pathname ===\"/\" ? \"nav-item active\" : \"nav-item\"}>\r\n                    <a className=\"nav-link\" href=\"/\">\r\n                    Search\r\n                    </a>\r\n               </li>\r\n               <li className={window.location.pathname ===\"/saved\" ? \"nav-item active\" : \"nav-item\"}>\r\n                    <a className=\"nav-link\" href=\"saved\">\r\n                    Saved\r\n                    </a>\r\n               </li>\r\n               \r\n               </ul>\r\n          </div>\r\n          </nav>\r\n     );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SearchPanel(props) {\r\n     return(         \r\n          <form className=\"col-11 col-md-8 mx-auto my-5\">\r\n               <div className=\"form-group\">\r\n                    <label>Search for ...</label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"tboxTerm\" aria-describedby=\"emailHelp\" placeholder=\"Enter a word/author\"\r\n                    value = {props.searhTerm}\r\n                    name=\"searchTerm\"\r\n                    onChange={props.typeWord}\r\n                    />               \r\n               </div>\r\n               <button type=\"submit\" className=\"btn btn-primary\" onClick={props.searchClick}>Search</button>\r\n          </form>\r\n     );\r\n} ","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Gets all books\r\n  getBooks: ()  => axios.get(\"/api/books\"),\r\n  searchBooks: (arg) => axios.get(`https://www.googleapis.com/books/v1/volumes?q=${arg}`),\r\n  removeBook: id => axios.delete(\"/api/removeBook/\"+id),\r\n  addBook: item => axios.post(\"/api/addBook/\", item)\r\n};\r\n","import React from \"react\";\r\nimport \"./Book.css\";\r\n\r\n function Book(props) {\r\n  return (\r\n    <article className=\"aBook p-3\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header d-flex justify-content-between\">\r\n          <div><a href={props.book.link} target=\"_blank\">{props.book.title}</a></div>\r\n          <div><button className={evalVis(props.isbn)} onClick={() => props.clickedFav(props.isbn, props.isLiked)}>{props.isLiked ? \"Remove from favorites\":\"Add to favorites\"}</button>{noSave(props.isbn)}</div>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <div className=\"px-3 mb-3 row\">By: {props.book.author}</div>\r\n          <div className=\"px-3 row\">\r\n               <div className={props.book.image ? \"col-3\": \"d-none\"}>\r\n                    <img className=\"float-left\" src={props.book.image}/>\r\n               </div>\r\n               <div className={props.book.image ? \"col-9\" : \"col-12\"}>\r\n                    <p>{props.book.synopsis}</p>\r\n                    <p>{props.book.pageCount ? `# of Pages: ${props.book.pageCount}`:'' }</p>\r\n                    <input type=\"hidden\" value={props.isbn}/>\r\n               </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\nlet evalVis = (arg) => {\r\n     if(arg === \"\") \r\n          return \"d-none\";\r\n     return \"btn-smy btn-secondary\";\r\n}\r\nlet noSave =(arg) =>{\r\n     if(arg === \"\") \r\n          return \"No ISBN Number\";\r\n}\r\nexport default Book;\r\n","import React from \"react\"\r\nimport SearchPanel from \"../../SearchPanel/SearchPanel\";\r\nimport API from \"../../utils/API\"\r\nimport Book from \"../../Book/Book\"\r\n\r\nclass Search extends React.PureComponent {\r\n     state = {\r\n          foundBooks:[],\r\n          savedBooks:[],\r\n          searchTerm:\"NEW YORK TIMES BESTSELLER\",\r\n          error: false\r\n     }\r\n     \r\n     componentDidMount() {\r\n          this.doSearch();\r\n     }\r\n    \r\n     doSearch = (event) => {\r\n          if(event)\r\n               event.preventDefault();\r\n          \r\n          API.searchBooks(this.state.searchTerm)\r\n          .then((response)=>{\r\n               return response.data.items;\r\n          })\r\n          .then(values=>{               \r\n               API.getBooks()\r\n               .then(savedBookRes => {\r\n                    this.setState({foundBooks: values, savedBooks: savedBookRes.data});\r\n               })\r\n          })\r\n          .catch(function(err){\r\n              this.setState({error:true});\r\n          });\r\n          \r\n     };\r\n\r\n     handleInputChange = event => {\r\n          const { name, value } = event.target;\r\n         this.setState({\r\n            [name]: value\r\n          });          \r\n        };\r\n\r\n     toggleFavorites = (arg, liked) => {\r\n          if(liked){\r\n               API.removeBook(arg)\r\n               .then(results => {\r\n                    let newSaved = this.state.savedBooks.filter(x => x.isbn !== arg);\r\n                    this.setState({savedBooks :newSaved});\r\n               })\r\n          }else{\r\n               let aBook = this.state.foundBooks.find(x => x.volumeInfo.industryIdentifiers != undefined && x.volumeInfo.industryIdentifiers[0].identifier == arg);\r\n               let bookObj={\r\n                    author:aBook.volumeInfo.authors,\r\n                    title:aBook.volumeInfo.title,\r\n                    isbn:arg,\r\n                    synopsis:aBook.volumeInfo.description,\r\n                    image: aBook.volumeInfo.imageLinks.smallThumbnail,\r\n                    link: aBook.volumeInfo.infoLink,\r\n                    pageCount: aBook.volumeInfo.pageCount\r\n               }\r\n               API.addBook(bookObj)\r\n               .then(results => {\r\n                    let joined = this.state.savedBooks.concat(bookObj);\r\n                    this.setState({savedBooks:joined});\r\n               })\r\n          }\r\n     }\r\n\r\n     render(){\r\n          return (\r\n               <>\r\n                    <div className=\"container col-11 col-md-8 mx-auto my-5\">\r\n                         <h1>Search</h1>\r\n                    </div>                    \r\n                    <div class=\"container col-11 col-md-8 mx-auto alert alert-danger\" role=\"alert\" hidden={!this.state.error}><h2>Error loading books from Google</h2></div>\r\n                    <SearchPanel searchClick = {this.doSearch} searhTerm={this.state.searchTerms} typeWord={this.handleInputChange}/>\r\n                    <div className=\"bookHolder\">\r\n                         {this.state.foundBooks.map((book, ind ) => {\r\n                              let adjustedVal={\r\n                                   title: book.volumeInfo.title,\r\n                                   author: book.volumeInfo.authors,\r\n                                   image: book.volumeInfo.imageLinks != undefined ? book.volumeInfo.imageLinks.smallThumbnail : null ,\r\n                                   synopsis: book.volumeInfo.description,\r\n                                   link: book.volumeInfo.infoLink,\r\n                                   pageCount: book.volumeInfo.pageCount\r\n                              }\r\n                              return (\r\n                                   <Book\r\n                                   key={ind}\r\n                                   book={adjustedVal}\r\n                                   isbn={book.volumeInfo.industryIdentifiers == undefined ? \"\":book.volumeInfo.industryIdentifiers[0].identifier}\r\n                                   clickedFav = {this.toggleFavorites}\r\n                                   isLiked= {book.volumeInfo.industryIdentifiers == undefined ? false : this.state.savedBooks.filter(x => x.isbn == book.volumeInfo.industryIdentifiers[0].identifier).length > 0}\r\n                                   />\r\n                              )\r\n                         })}\r\n                    </div>\r\n               </>\r\n          )\r\n     };\r\n}\r\nexport default Search","import React from \"react\"\r\nimport API from \"../../utils/API\"\r\nimport Book from \"../../Book/Book\"\r\n\r\nexport default class Saved extends React.PureComponent {\r\n     state = {\r\n          savedBooks:[]\r\n     }\r\n     componentDidMount() {\r\n          this.loadBooks();\r\n     }\r\n     loadBooks = () => {\r\n          API.getBooks()\r\n          .then(bookReults => {\r\n               this.setState({savedBooks: bookReults.data});\r\n          });\r\n     }\r\n     removeFavorite = arg => {\r\n          API.removeBook(arg)\r\n               .then(results => {\r\n                    console.log('results',results)\r\n                    let newSaved = this.state.savedBooks.filter(x => x.isbn !== arg);\r\n                    this.setState({savedBooks :newSaved});\r\n               })\r\n     }\r\n     render(){\r\n          return (\r\n               <>\r\n                    <div className=\"container col-11 col-md-8 mx-auto my-5\">\r\n                         <h1>Saved</h1>\r\n                    </div>\r\n                    <div className=\"bookHolder\">\r\n                         {this.state.savedBooks.map(book => {\r\n                              return (\r\n                                   <Book\r\n                                   key={book.id}\r\n                                   book={book}\r\n                                   isbn = {book.isbn == undefined ? \"\":book.isbn}\r\n                                   clickedFav = {this.removeFavorite}\r\n                                   isLiked = {true}\r\n                                   />\r\n                              )\r\n                         })}\r\n                    </div>\r\n               </>\r\n          )\r\n     };\r\n}","import React from \"react\";\r\n\r\nexport default function NotFount() {\r\n     return(         \r\n          <div className=\"container\">\r\n               <h1>Page not Found</h1>\r\n          </div>\r\n     );\r\n} ","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from \"./components/Navigation/Navigation\"\r\nimport Search from \"./components/Pages/Search/Search\"\r\nimport Saved from \"./components/Pages/Saved/Saved\"\r\nimport NotFound from \"./components/Pages/NotFound/NotFound\"\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n    \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <Router>\r\n               <div>\r\n                    <Navigation/>\r\n                    <Switch>\r\n                         <Route exact path=\"/\" component={Search}/>\r\n                         <Route exact path=\"/saved\" component={Saved}/>\r\n                         <Route exact path=\"*\" component={NotFound}/>\r\n                    </Switch>\r\n               </div>\r\n          </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              //(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              //console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      //console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}